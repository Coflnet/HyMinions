extends ../layouts/default

block append js
    script(src="/js/jquery/jquery.doubleScroll.js")
    //- script(src="/js/minionsData.js")
    //- script(src="/js/minionsOperation.js")
    script(src="/js/minions.js")
    	
block append variables
    - var currentPage = "minions";
    - var numberOfMinions = 53;

block meta
    meta(name="description" content="Know your most profitable minions! Tailor made for each profile, fully accurate.")
    
    <meta http-equiv='cache-control' content='no-cache'>
    <meta http-equiv='expires' content='0'>
    <meta http-equiv='pragma' content='no-cache'>

mixin infoBox(id,title, info)
    i.fas.fa-question-circle.fa-lg(data-toggle="modal" data-target="#"+id)
    .modal.fade(id=id tabindex="-1" role="dialog" aria-labelledby=ud+"Label" aria-hidden="true")
                .modal-dialog(role="document")
                    .modal-content
                        .modal-header
                            h5.modal-title(id=id+"Label")=title
                            button.close(type="button" data-dismiss="modal" aria-label="Close")
                                span(aria-hidden="true") &times;
                        .modal-body
                            p=info
                        .modal-footer
                            button.btn.btn-secondary(type="button" data-dismiss="modal") Close

block content
    .container
        h1 MINIONS <img src="images/minions.png" width="40"/>
        #overall
            .row
                #general.col-lg-6.col-12
                    br
                    h3 General
                    .form-group
                        //-pretick use profile to be true for first time visit
                        input#overallUseProfile.checkbox(type="checkbox" onchange="toggleUseProfile()" checked=(settings.useProfile==false&&settings.tier!=11 ? undefined:"checked")) 
                        label(for="overallUseProfile") &nbsp; Use Profile
                    .form-group#useProfile(class=(settings.useProfile==false&&settings.tier!=11 ? "d-none":""))
                        p Minecraft Name: &nbsp; 
                            input#overallProfileName.form-control(value=settings.name)
                        if(settings.profileNames)
                            label(for="overallProfileProfile") Profile: &nbsp;
                            select#overallProfileProfile.form-control
                                -let k=0
                                while k<settings.profileNames.length
                                    option(value=k selected=(settings.profile==k?'selected':undefined))=settings.profileNames[k]
                                    -k++;
                    
                    .form-group#useTier(class=(settings.useProfile==false&&settings.tier!=11 ? "":"d-none"))
                        label(for="overallTier") Tier: &nbsp;
                        select#overallTier.form-control
                            -let j=1
                            while j<=11
                                option(selected=(settings.tier==j ? 'selected':undefined))=j
                                -j++;
                            option(selected=(settings.tier==12 ? 'selected':undefined) value="12") 11/12
                    .form-group
                        p Fuel/ other perks: &nbsp; 
                            input#overallFuel.form-control(type="number" value=settings.fuel min="0")
                            span &nbsp; %
                    .form-group
                        label(for="overallCalculationType") Calculation mode: &nbsp;  
                        select#overallCalculationType.form-control(onchange="toggleCalculationType()")
                            option(value="0" selected=(settings.calculationType==0?'selected':undefined)) Old
                            option(value="1" selected=(settings.calculationType==1?'selected':undefined)) New (based on offline duration)
                        span &nbsp; 
                            +infoBox("calculationTypeModal","Calculation Type","I don't know either")
                    #autoCalculationType(class=(settings.calculationType==1 ? "":"d-none"))
                        .form-group
                            p Offline time: &nbsp; 
                                input#overallOfflineTime.form-control(type="number" value=settings.offlineTimeUnit==1?settings.offlineTime/24:settings.offlineTime min="0")
                                span &nbsp;
                                select#overallOfflineTimeUnit.form-control
                                    option(value="0" selected=(settings.offlineTimeUnit==0?'selected':undefined)) hour(s)
                                    option(value="1" selected=(settings.offlineTimeUnit==1?'selected':undefined)) day(s)
                .col-lg-6.col-12  
                    #advanced
                        br
                        h3 Advanced 
                        #manualCalculationType(class=(settings.calculationType==0 ? "":"d-none"))
                            .form-group
                                label(for="overallProductForm") Products form: &nbsp;
                                select#overallProductForm.form-control
                                    option(value="-2" selected=(settings.productForm==-2?'selected':undefined)) Max profit (enchanted forms)
                                    option(value="-1" selected=(settings.productForm==-1?'selected':undefined)) Max profit
                                    option(value="0" selected=(settings.productForm==0?'selected':undefined)) Unenchanted form
                                    option(value="1" selected=(settings.productForm==1?'selected':undefined)) First enchanted form
                                    option(value="2" selected=(settings.productForm==2?'selected':undefined)) Second enchanted form (if applicable)
                            .form-group
                                label(for="overallDiamondSpreadingDwarvenCompactor") Diamond Spreading: &nbsp;
                                select#overallDiamondSpreadingDwarvenCompactor.form-control
                                    option(value="0" selected=(settings.diamondSpreading==0?'selected':undefined)) None
                                    option(value="1" selected=(settings.diamondSpreading==1||settings.diamondSpreading==3?'selected':undefined)) Diamond spreading only
                                    option(value="2" selected=(settings.diamondSpreading==2?'selected':undefined)) Diamond spreading + Dwarven compactor
                                span &nbsp; 
                                    +infoBox("diamondSpreadingDwarvenCompactorModal","Diamond Spreading","I don't know either")
                        #autoCalculationTypeAdvanced(class=(settings.calculationType==1 ? "":"d-none"))
                            .form-group
                                input#overallDiamondSpreading.checkbox(type="checkbox" checked=(settings.diamondSpreading>=1 ? 'checked' : undefined))
                                label(for="overallDiamondSpreading") &nbsp; Has Diamond Spreading &nbsp;
                                +infoBox("diamondSpreadingModal","Diamond Spreading","I don't know either")
                            .form-group
                                label(for="overallSuperCompactor") Compactor: &nbsp;
                                select#overallSuperCompactor.form-control(onchange="toggleMinionChest()")
                                    option(value="0" selected=(settings.superCompactor==0?'selected':undefined)) None/ Compactor
                                    //-option(value="1" selected=(settings.superCompactor==1?'selected':undefined)) Compactor
                                    option(value="2" selected=(settings.superCompactor==2?'selected':undefined)) Super Compactor
                                    option(value="3" selected=(settings.superCompactor==3?'selected':undefined)) Dwarven Super Compactor
                                span &nbsp; 
                                    +infoBox("superCompactorModal","Dwarven Super Compactor","I don't know either")
                            //- #minionChest(class=(settings.superCompactor<=1 ? "":"d-none"))
                            //-     .form-group
                            //-         label(for="overallMinionChest") Minion Chest: &nbsp;
                            //-         select#overallMinionChest.form-control
                            //-             option(value="0" selected=(settings.minionChest==0?'selected':undefined)) None
                            //-             option(value="3" selected=(settings.minionChest==3?'selected':undefined)) Small Storage
                            //-             option(value="9" selected=(settings.minionChest==9?'selected':undefined)) Medium Storage
                            //-             option(value="15" selected=(settings.minionChest==15?'selected':undefined)) Large Storage
                            //-             option(value="21" selected=(settings.minionChest==21?'selected':undefined)) X-Large Storage
                            //-             option(value="27" selected=(settings.minionChest==27?'selected':undefined)) XX-Large Storage
                            //-     .form-group
                            //-         label(for="overallAutomaticShipping") Automated Shipping: &nbsp;
                            //-         select#overallAutomaticShipping.form-control
                            //-             option(value="0" selected=(settings.automaticShipping==0?'selected':undefined)) None
                            //-             option(value="0.5" selected=(settings.automaticShipping==0.5?'selected':undefined)) Budget Hopper
                            //-             option(value="0.9" selected=(settings.automaticShipping==0.9?'selected':undefined)) Enchanted Hopper
                        
                    
                        
                        br
                        #miscellaneousInline
                            h3 Miscellaneous &nbsp;
                            a.read-more(data-toggle="collapse" href="#miscellaneous" aria-expanded="false" aria-controls="miscellaneous") Expand/ Collapse
                        #miscellaneous.collapse
                            .form-group
                                label(for="overallSellingTo") Selling to: &nbsp;
                                select#overallSellingTo.form-control
                                    option(value="1" selected=(settings.sellingTo==0?'selected':undefined)) Max profit (NPC or bazaar)
                                    option(value="0" selected=(settings.sellingTo==-1?'selected':undefined)) NPC only
                            .form-group
                                label(for="overallSellingMethod") Selling method in bazaar: &nbsp;
                                select#overallSellingMethod.form-control
                                    option(value="1" selected=(settings.sellingMethod==1?'selected':undefined)) Sell instantly
                                    option(value="0" selected=(settings.sellingMethod==0?'selected':undefined)) Sell offer
                                    
                            .form-group
                                p Tax in bazaar: &nbsp; 
                                    input#overallTax.form-control(type="number" value=settings.tax min="0")
                                    span &nbsp; %
            br
            button#overallSettings.btn(onclick="generateLink()") Apply
            br
            br
            
        #content
            hr
            if !minions || !settings
                h1 Error
                p.lead An unexpected error has occured. You may make a bug report <a href="/contact">here</a>.
            else if settings.hasError
                h1 Error
                p.lead=settings.errorMsg

            else
                #search: .form-group
                    label(for="searchInput") Search: &nbsp;
                    input#searchInput(list="searchDatalist").form-control
                    datalist#searchDatalist
                        each minion in minions
                            option(value=minion.name)
                    span &nbsp; &nbsp; &nbsp;
                    button#searchButton.btn(onclick="search()") Search
                #doubleScroll: table#minionsTable.table.table-dark.w-100
                    thead
                        tr
                            th(scope="col")
                            th(scope="col") 
                                if settings.calculationType==0
                                    | Minion (Profit Per Hour)
                                else
                                    | Minion (Total Profit)
                            th(scope="col") Tier
                            th(scope="col") Items
                            th(scope="col") Number of Items
                            th(scope="col") Unit Price (Bazaar)
                            if settings.calculationType==1
                                th(scope="col") Total Profit
                            th(scope="col") Profit Per Hour
                    -let i=0;
                    each minion in minions
                        tr(id="minion"+i+"Row")
                            td.text-center
                                | ##{i+1}
                                br
                                img(src="/images/minions/"+minion.name+".png" width="30")
                            td(id="minion"+i+"Name")
                                | #{minion.name}
                                br
                                | (#{minion.totalProfitText})
                            td(id="minion"+i+"Tier")=minion.tier
                            td(id="minion"+i+"Items")
                                each product in minion.outputProducts
                                    | #{product.name}
                                    br
                            td(id="minion"+i+"NumberOfItems")
                                each product in minion.outputProducts
                                    | #{product.numberOfItems}
                                    br
                            td(id="minion"+i+"BazaarPrices")
                                each product in minion.outputProducts
                                    | #{product.unitPrice}
                                    br
                            td(id="minion"+i+"TotalProfit")=minion.totalProfitText
                            if settings.calculationType==1
                                td(id="minion"+i+"ProfitPerHour")=minion.profitPerHour
                        - i++;
            p: small
                if(settings.lastUpdatedBazaar)
                    | Last updated time of bazaar price: #{settings.lastUpdatedBazaar} UTC
                if(settings.lastUpdatedProfile)
                    | <br /> Last updated time of profile: #{settings.lastUpdatedProfile} UTC





        //- #individualModal.modal.fade(tabindex="-1" role="dialog" aria-labelledby="individualModalLabel" aria-hidden="true")
        //-     .modal-dialog(role="document")
        //-         .modal-content
        //-             .modal-header
        //-                 h5#individualModalLabel.modal-title Title
        //-                 button.close(type="button" data-dismiss="modal" aria-label="Close")
        //-                     span(aria-hidden="true") &times;
        //-             .modal-body
        //-                 .form-group
        //-                     label(for="individualTier") Tier: &nbsp;
        //-                     select#individualTier.form-control
        //-                         -let l=1
        //-                         while l<=12
        //-                             option(id = "individualTierOption"+l selected = (l==12 ? "selected" : ""))=l
        //-                             -l++;
                            
        //-                 .form-group
        //-                     p Fuel: &nbsp; <input id="individualFuel" type="number" value="25" class="form-control" min="0"/> %
        //-                 .form-group
        //-                     input#individualDiamondSpreading.checkbox(type="checkbox" checked onchange="toggleIndividualDiamondSpreading()")
        //-                     label(for="individualDiamondSpreading") &nbsp; Has Diamond Spreading
        //-                 .form-group#products
        //-                     label Form of products:
        //-                     br
        //-                     -let m = 0;
        //-                     -let n = 0;
        //-                     while m<10
        //-                         select(id="individualProduct"+m).form-control
        //-                             -n=0;
        //-                             while n<5
        //-                                 option(id="individualProduct"+m+"Option"+n value=n)
        //-                                 -n++;
        //-                         -m++;
        //-                     select(id="individualProductDiamondSpreading").form-control
        //-                         -n=0;
        //-                         while n<3
        //-                             option(id="individualProductDiamondSpreadingOption"+n value=n)
        //-                             -n++;
        //-                 .form-group
        //-                     label(for="individualSellingTo") Selling to: &nbsp;
        //-                     select#individualSellingTo.form-control
        //-                         option(value="0") Max profit (NPC or bazaar)
        //-                         option(value="1") Bazaar only
        //-                         option(value="-1") NPC only
        //-                 .form-group
        //-                     label(for="individualSellingMethod") Selling method in bazaar: &nbsp;
        //-                     select#individualSellingMethod.form-control
        //-                         option(value="0") Sell offer
        //-                         option(value="1") Sell instantly
        //-             .modal-footer
        //-                 button.btn.btn-secondary(type="button" data-dismiss="modal") Cancel
        //-                 button.btn.btn-warning(type="button" data-dismiss="modal" onclick="applyIndividualSettings()") Apply

            
            
            